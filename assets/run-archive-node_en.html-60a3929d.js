import{_ as n,W as a,X as s,a0 as e}from"./framework-5cecf6de.js";const i={},t=e(`<h1 id="how-to-run-a-synchronization-node" tabindex="-1"><a class="header-anchor" href="#how-to-run-a-synchronization-node" aria-hidden="true">#</a> How to run a synchronization node?</h1><blockquote><p>Note: The current mainnet Polkadot version is 3.0. You still need to use the original 2.0 version for synchronization. The latest 3.0 program cannot yet be directly synchronized.</p></blockquote><h2 id="_1-configure-environment" tabindex="-1"><a class="header-anchor" href="#_1-configure-environment" aria-hidden="true">#</a> 1. Configure environment</h2><h3 id="_1-1-use-precompiled-version" tabindex="-1"><a class="header-anchor" href="#_1-1-use-precompiled-version" aria-hidden="true">#</a> 1.1 Use precompiled version</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">wget</span> https://github.com/DeepBrainChain/DeepBrainChain-MainChain/releases/download/v2.6/dbc_chain_linux_x64.tar.gz <span class="token parameter variable">-O</span> dbc_chain_linux_x64.tar.gz
<span class="token function">tar</span> xf dbc_chain_linux_x64.tar.gz <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> dbc-chain-mainnet
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_1-2-manual-compilation" tabindex="-1"><a class="header-anchor" href="#_1-2-manual-compilation" aria-hidden="true">#</a> 1.2 Manual compilation</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Install dependencies</span>
<span class="token function">curl</span> https://getsubstrate.io <span class="token parameter variable">-sSf</span> <span class="token operator">|</span> <span class="token function">bash</span> <span class="token parameter variable">-s</span> -- <span class="token parameter variable">--fast</span>
<span class="token builtin class-name">source</span> ~/.cargo/env

<span class="token comment"># Compile dbc-chain</span>
<span class="token function">git</span> clone https://github.com/DeepBrainChain/DeepBrainChain-MainChain.git
<span class="token builtin class-name">cd</span> DeepBrainChain-MainChain
<span class="token function">git</span> checkout v2.6
<span class="token function">cargo</span> build <span class="token parameter variable">--release</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="_2-run-the-synchronization-node" tabindex="-1"><a class="header-anchor" href="#_2-run-the-synchronization-node" aria-hidden="true">#</a> 2. Run the synchronization node</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Execute using precompilation</span>
./dbc-chain --base-path ./db_data <span class="token parameter variable">--pruning</span> archive
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Manual compilation and execution:</span>
./target/release/dbc-chain --base-path ./db_data <span class="token parameter variable">--pruning</span> archive
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>Port parameters:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>--rpc-port 9933 # Specify the port on which your node listens for RPC. 9933 is the default value, so this parameter can also be ignored
--ws-port 9945 # Specify the port your node uses to listen to WebSocket. The default port is 9944
--port 30333 # Specify the node port you use to listen for p2p traffic. 30333 is the default port. You can ignore this flag if there is no need to change it.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Other parameters reference:</p><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>--ws-max-connections 2000
--in-peers 200
--out-peers 200
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>When encountering the phenomenon of 0 peers during synchronization, you need to specify bootnodes for synchronization. Old users can find it by querying the previous synchronization node logs. New users can try to specify <code> --bootnodes /ip4/122.99.183.53/tcp/3308/p2p/12D3KooWDx4pgzT2RAPF12QkmiBZy6BUsTtPt7JgiYxgFm6Z5Hc5</code></p></blockquote><h2 id="_3-after-synchronization-is-completed-upgrade-to-3-0-synchronization-node" tabindex="-1"><a class="header-anchor" href="#_3-after-synchronization-is-completed-upgrade-to-3-0-synchronization-node" aria-hidden="true">#</a> 3. After synchronization is completed, upgrade to 3.0 synchronization node</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Execute in the folder generated in step 2</span>
<span class="token function">wget</span> https://github.com/DeepBrainChain/DeepBrainChain-MainChain/releases/download/v3.2/dbc-chain-v3.tar.gz <span class="token parameter variable">-O</span> dbc_chain_linux_x64.tar.gz

<span class="token function">tar</span> xf dbc_chain_linux_x64.tar.gz

<span class="token comment">#Run verification node</span>
<span class="token comment"># Query and stop the old version of the synchronization node</span>
<span class="token function">ps</span> aux <span class="token operator">|</span> <span class="token function">grep</span> dbc-chain

<span class="token comment">#The result is similar to the following display</span>
root <span class="token number">761495</span> <span class="token number">0.0</span> <span class="token number">0.0</span> <span class="token number">9584</span> <span class="token number">2588</span> pts/0 S+ <span class="token number">17</span>:07 <span class="token number">0</span>:00 <span class="token function">grep</span> <span class="token parameter variable">--color</span><span class="token operator">=</span>auto <span class="token parameter variable">-w</span> dbc-chain
root <span class="token number">926101</span> <span class="token number">2.0</span> <span class="token number">5.1</span> <span class="token number">4295592</span> <span class="token number">1650640</span> ? Sl <span class="token number">2023</span> <span class="token number">5320</span>:10 ./dbc-chain --base-path ./db_data <span class="token parameter variable">--port</span> <span class="token number">30337</span> --ws-port <span class="token number">9948</span> --rpc-port <span class="token number">9937</span> <span class="token parameter variable">--pruning</span> archive

<span class="token comment"># Stop old node</span>
<span class="token function">sudo</span> <span class="token function">kill</span> <span class="token parameter variable">-9</span> <span class="token number">926101</span> <span class="token punctuation">(</span>note to replace with the actual queried PID<span class="token punctuation">)</span>

<span class="token comment">#Start new version node</span>
<span class="token function">nohup</span> ./dbc-chain --base-path ./db_data <span class="token parameter variable">--chain</span> dbcSpecRaw.json <span class="token parameter variable">--validator</span> <span class="token parameter variable">--name</span> YourNodeName <span class="token operator"><span class="token file-descriptor important">1</span>&gt;</span>dbc_node.log <span class="token operator"><span class="token file-descriptor important">2</span>&gt;</span><span class="token file-descriptor important">&amp;1</span> <span class="token operator">&amp;</span>

<span class="token comment">#If you encounter a startup error</span>
./dbc-chain: /lib/x86_64-linux-gnu/libstdc++.so.6: version <span class="token variable"><span class="token variable">\`</span>GLIBCXX_3.4.30&#39; not found <span class="token punctuation">(</span>required by ./dbc-chain<span class="token punctuation">)</span>
./dbc-chain: /lib/x86_64-linux-gnu/libstdc++.so.6: version <span class="token variable">\`</span></span>GLIBCXX_3.4.29<span class="token string">&#39; not found (required by ./dbc-chain)
./dbc-chain: /lib/x86_64-linux-gnu/libc.so.6: version \`GLIBC_2.32&#39;</span> not found <span class="token punctuation">(</span>required by ./dbc-chain<span class="token punctuation">)</span>
./dbc-chain: /lib/x86_64-linux-gnu/libc.so.6: version <span class="token variable"><span class="token variable">\`</span>GLIBC_2.34&#39; not found <span class="token punctuation">(</span>required by ./dbc-chain<span class="token punctuation">)</span>
./dbc-chain: /lib/x86_64-linux-gnu/libc.so.6: version <span class="token variable">\`</span></span>GLIBC_2.33&#39; not found <span class="token punctuation">(</span>required by ./dbc-chain<span class="token punctuation">)</span>

<span class="token comment">#solution:</span>
<span class="token comment">#1. Equipment in China:</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;deb http://mirrors.aliyun.com/ubuntu/ jammy main&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/apt/sources.list
<span class="token function">sudo</span> <span class="token function">apt</span> update
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> libc6 libstdc++6 <span class="token parameter variable">-y</span>
<span class="token comment">#2. Non-China equipment:</span>
<span class="token builtin class-name">echo</span> <span class="token string">&quot;deb http://archive.ubuntu.com/ubuntu/ jammy main&quot;</span> <span class="token operator">&gt;&gt;</span> /etc/apt/sources.list
<span class="token function">sudo</span> <span class="token function">apt</span> update
<span class="token function">sudo</span> <span class="token function">apt</span> <span class="token function">install</span> libc6 libstdc++6 <span class="token parameter variable">-y</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,13),o=[t];function c(l,r){return a(),s("div",null,o)}const d=n(i,[["render",c],["__file","run-archive-node_en.html.vue"]]);export{d as default};
