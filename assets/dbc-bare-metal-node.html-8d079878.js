import{_ as i,H as r,W as p,X as l,Y as t,Z as n,$ as s,a0 as o}from"./framework-27d45f00.js";const d={},c={href:"http://112.192.16.27:9000/dbc/install_update_script/mainnet/install_baremetal.sh",target:"_blank",rel:"noopener noreferrer"},u={href:"http://112.192.16.27:9000/dbc/install_update_script/mainnet/update_baremetal.sh",target:"_blank",rel:"noopener noreferrer"},m={href:"https://deepbrainchain.github.io/DBC-Wiki/en/onchain-guide/bonding-machine.html",target:"_blank",rel:"noopener noreferrer"},v={href:"https://deepbrainchain.github.io/DBC-Wiki/en/install-update-dbc-node/dbc-client-api/http-api.html#bare-metal-node-operations",target:"_blank",rel:"noopener noreferrer"},b={href:"https://deeplink.cloud/",target:"_blank",rel:"noopener noreferrer"};function h(k,e){const a=r("ExternalLinkIcon");return p(),l("div",null,[e[13]||(e[13]=t('<h1 id="dbc-bare-metal-node" tabindex="-1"><a class="header-anchor" href="#dbc-bare-metal-node" aria-hidden="true">#</a> DBC Bare Metal Node</h1><h2 id="introduction" tabindex="-1"><a class="header-anchor" href="#introduction" aria-hidden="true">#</a> Introduction</h2><ol><li>The bare metal node of DBC is only responsible for generating the node id for the bare metal server, and controlling the bare metal server to perform limited operations such as switching on and off.</li><li>Bare metal nodes do not support functions related to virtual machines. Because the requirements for the hardware equipment of the machine where the node is deployed are very low, the resources such as memory and hard disk used are very small, as long as the IPMI tool can be used for the bare metal server and the network service is normal.</li></ol><div class="hint-container tip"><p class="hint-container-title">注意！</p><p>The bare metal node of DBC itself has a &quot;node_id&quot;, which does not need to be uploaded to the chain, and is only used to generate a &quot;node_id&quot; for the bare metal server.</p><p>For example, send a request to add a bare metal server to a bare metal node. The parameter needs to tell the client node which bare metal node to send to, and fill in the information for IPMI control. The request will return a new &quot;node_id&quot;, that is the &quot;node_id&quot; of the added bare metal server. This &quot;node_id&quot; needs to be on the chain, and then the user can rent it on the chain, and use it to send the request of switching on and off.</p><p>This article mentions two kinds of node_id, which are distinguished here:</p><ul><li>&quot;The node_id of the bare metal node&quot; refers to the &quot;node_id&quot; field in the &quot;dat/node.dat&quot; file in the node installation directory.</li><li>&quot;The node_id of the bare metal server&quot; is the &quot;node_id&quot; field returned by sending the request to add the bare metal server.</li></ul></div><h2 id="install-node" tabindex="-1"><a class="header-anchor" href="#install-node" aria-hidden="true">#</a> install node</h2>',5)),n("ol",null,[n("li",null,[e[1]||(e[1]=s("Download the installation script：")),n("a",c,[e[0]||(e[0]=s("http://112.192.16.27:9000/dbc/install_update_script/mainnet/install_baremetal.sh")),o(a)])]),e[2]||(e[2]=n("li",null,"run the install script:",-1))]),e[14]||(e[14]=t(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sudo bash ./install_baremetal.sh &lt;installation directory&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>The installation script will automatically install the IPMI tool, and like the script for installing the DBC client node, you need to enter 2 port numbers.</p><h2 id="upgrade-node" tabindex="-1"><a class="header-anchor" href="#upgrade-node" aria-hidden="true">#</a> upgrade node</h2>`,3)),n("ol",null,[n("li",null,[e[4]||(e[4]=s("Download upgrade script：")),n("a",u,[e[3]||(e[3]=s("http://112.192.16.27:9000/dbc/install_update_script/mainnet/update_baremetal.sh")),o(a)])]),e[5]||(e[5]=n("li",null,"Run the upgrade script：",-1))]),e[15]||(e[15]=t(`<div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>sudo bash update_baremetal.sh &lt;installation directory&gt;
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="add-a-bare-metal-server" tabindex="-1"><a class="header-anchor" href="#add-a-bare-metal-server" aria-hidden="true">#</a> Add a bare metal server</h2><ul><li><p>request method：POST</p></li><li><p>request URL：</p></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>http://{{dbc_client_ip}}:{{dbc_client_port}}/api/v1/bare_metal/add
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>request Body:</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;peer_nodes_list&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token comment">// node_id of bare metal node</span>
    <span class="token string">&quot;ccd9a2118ba3c95cd458302601f15281edc39d72dcf11a07527893d97ac1a573&quot;</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;additional&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// Informations of bare metal server</span>
    <span class="token property">&quot;bare_metal_nodes&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token comment">// The unique ID of the machine supplier to identify the bare metal, required.</span>
        <span class="token property">&quot;uuid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;3156995b-da18-4268-9734-f8d168e90a7d&quot;</span><span class="token punctuation">,</span>
        <span class="token comment">// The connection method provided by the bare metal server to the user. Required. A fixed IP address is recommended.</span>
        <span class="token property">&quot;ip&quot;</span><span class="token operator">:</span> <span class="token string">&quot;175.221.204.110&quot;</span><span class="token punctuation">,</span>
        <span class="token comment">// Operating system of the bare metal server, optional.</span>
        <span class="token property">&quot;os&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Ubuntu 20.04.3 LTS (Focal Fossa) 5.4.0-121-generic GNU/Linux&quot;</span><span class="token punctuation">,</span>
        <span class="token comment">// A description customized by the machine owner, not required.</span>
        <span class="token property">&quot;desc&quot;</span><span class="token operator">:</span> <span class="token string">&quot;在xxx平台租用的裸金属服务器，用于xxx业务，机房id是9f01ca9c-38bd-46a9-9637-dac92b352a63&quot;</span><span class="token punctuation">,</span>
        <span class="token comment">// The host ID of ipmi, required. A fixed IP address is recommended.</span>
        <span class="token property">&quot;ipmi_hostname&quot;</span><span class="token operator">:</span> <span class="token string">&quot;192.168.0.110&quot;</span><span class="token punctuation">,</span>
        <span class="token comment">// ipmi username, required.</span>
        <span class="token property">&quot;ipmi_username&quot;</span><span class="token operator">:</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span>
        <span class="token comment">// ipmi user password, required.</span>
        <span class="token property">&quot;ipmi_password&quot;</span><span class="token operator">:</span> <span class="token string">&quot;dbtu2017&quot;</span><span class="token punctuation">,</span>
        <span class="token comment">// ipmi port，optional. v0.4.0.9 version added.</span>
        <span class="token property">&quot;ipmi_port&quot;</span><span class="token operator">:</span> <span class="token number">623</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// Generated by the node_id and node_private_key of the bare metal node</span>
  <span class="token property">&quot;wallet&quot;</span><span class="token operator">:</span><span class="token string">&quot;ccd9a2118ba3c95cd458302601f15281edc39d72dcf11a07527893d97ac1a573&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;nonce&quot;</span><span class="token operator">:</span><span class="token string">&quot;5tYLiAF9vVP8bRqSfV9DfZnizsDNY7dNeEWrSUAY8f1LKiZqBu8zaVs&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;sign&quot;</span><span class="token operator">:</span><span class="token string">&quot;3c680ba745af6695981fe2b30aedf6861749f570d9a6fe949930caf4613c225d4a674c33ec3d4af26c20caf871dd0f3a7cb4e0c045f12c211a345781054fc282&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>return example：</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;errcode&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;message&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;bare_metal_nodes&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;node_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;fcf2cd8b99958606d260ca00c5ac00c88c242bcf8eb38e7cc3f29e9719a73f39&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;uuid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;3156995b-da18-4268-9734-f8d168e90a7d&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="query-the-list-of-bare-metal-servers" tabindex="-1"><a class="header-anchor" href="#query-the-list-of-bare-metal-servers" aria-hidden="true">#</a> Query the list of bare metal servers</h2><ul><li><p>request method：POST</p></li><li><p>request URL：</p></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>http://{{dbc_client_ip}}:{{dbc_client_port}}/api/v1/bare_metal
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>request Body:</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;peer_nodes_list&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token comment">// node_id of bare metal node. When this is empty, it means querying the list of all bare metal servers.</span>
    <span class="token string">&quot;ccd9a2118ba3c95cd458302601f15281edc39d72dcf11a07527893d97ac1a573&quot;</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;additional&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// Generated by the node_id and node_private_key of the bare metal node</span>
  <span class="token property">&quot;wallet&quot;</span><span class="token operator">:</span><span class="token string">&quot;ccd9a2118ba3c95cd458302601f15281edc39d72dcf11a07527893d97ac1a573&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;nonce&quot;</span><span class="token operator">:</span><span class="token string">&quot;5tYLiAF9vVP8bRqSfV9DfZnizsDNY7dNeEWrSUAY8f1LKiZqBu8zaVs&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;sign&quot;</span><span class="token operator">:</span><span class="token string">&quot;3c680ba745af6695981fe2b30aedf6861749f570d9a6fe949930caf4613c225d4a674c33ec3d4af26c20caf871dd0f3a7cb4e0c045f12c211a345781054fc282&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>return example：</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;errcode&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;message&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;bare_metal_nodes&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token punctuation">{</span>
        <span class="token property">&quot;node_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;fcf2cd8b99958606d260ca00c5ac00c88c242bcf8eb38e7cc3f29e9719a73f39&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;node_private_key&quot;</span><span class="token operator">:</span> <span class="token string">&quot;4c2e7133834d6d7dd35088beda5556215f6f5b15d2cd3c3153f117aaeec2c28b&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;uuid&quot;</span><span class="token operator">:</span> <span class="token string">&quot;3156995b-da18-4268-9734-f8d168e90a7d&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;ip&quot;</span><span class="token operator">:</span> <span class="token string">&quot;175.221.204.110&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;os&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Ubuntu 20.04.3 LTS (Focal Fossa) 5.4.0-121-generic GNU/Linux&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;description&quot;</span><span class="token operator">:</span> <span class="token string">&quot;在xxx平台租用的裸金属服务器，用于xxx业务，机房id是9f01ca9c-38bd-46a9-9637-dac92b352a63&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;ipmi_hostname&quot;</span><span class="token operator">:</span> <span class="token string">&quot;192.168.0.110&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;ipmi_username&quot;</span><span class="token operator">:</span> <span class="token string">&quot;admin&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;ipmi_password&quot;</span><span class="token operator">:</span> <span class="token string">&quot;dbtu2017&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;deeplink_device_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;123456789&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;deeplink_device_password&quot;</span><span class="token operator">:</span> <span class="token string">&quot;aAbBcC&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">]</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>When the &quot;peer_nodes_list&quot; array in the request body contains the node_id of the bare metal node, you can also query the specified bare metal server based on the <code>uuid</code> entered when adding the bare metal server.</p><ul><li>Use <code>http://{{dbc_client_ip}}:{{dbc_client_port}}/api/v1/bare_metal/&lt;node_id&gt;</code> to query related information about the bare metal server with the specified <code>node_id</code>.</li><li>Use <code>http://{{dbc_client_ip}}:{{dbc_client_port}}/api/v1/bare_metal/&lt;uuid&gt;</code> to query related information about the bare metal server with the specified <code>uuid</code>.</li></ul><h2 id="bare-metal-server-on-chain" tabindex="-1"><a class="header-anchor" href="#bare-metal-server-on-chain" aria-hidden="true">#</a> Bare metal server on-chain</h2>`,18)),n("p",null,[e[7]||(e[7]=s('Use the "node_id" and "node_private_key" queried above to upload the bare metal server to the chain. Refer to ')),n("a",m,[e[6]||(e[6]=s("Machine Onchain steps")),o(a)])]),e[16]||(e[16]=t(`<p>After being on-chain, you can rent a bare metal server on the chain just like renting an ordinary computing machine.</p><div class="hint-container tip"><p class="hint-container-title">注意！</p><p>The &quot;node_id&quot; used by the bare metal server on the chain is the &quot;node_id&quot; returned by the request to add the bare metal server, and the &quot;node_private_key&quot; is obtained by querying the bare metal server above.</p></div><h2 id="use-of-bare-metal-servers" tabindex="-1"><a class="header-anchor" href="#use-of-bare-metal-servers" aria-hidden="true">#</a> Use of Bare Metal Servers</h2><p>By renting a bare metal server on the chain, you can query its machine information, and use the IP and port in the machine information to connect (ssh or Windows remote connection tool) to access.</p><p>If the bare metal server is not powered on, you can control its power to be powered on by sending a request.</p><ul><li><p>request method：POST</p></li><li><p>request URL：</p></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>http://{{dbc_client_ip}}:{{dbc_client_port}}/api/v1/bare_metal/power
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>request Body:</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;peer_nodes_list&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token comment">// node_id of bare metal server</span>
    <span class="token string">&quot;fcf2cd8b99958606d260ca00c5ac00c88c242bcf8eb38e7cc3f29e9719a73f39&quot;</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;additional&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// power control command</span>
    <span class="token comment">// &quot;on&quot;     - power on</span>
    <span class="token comment">// &quot;off&quot;    - power off</span>
    <span class="token comment">// &quot;reset&quot;  - power reset</span>
    <span class="token comment">// &quot;status&quot; - get power status</span>
    <span class="token property">&quot;command&quot;</span><span class="token operator">:</span> <span class="token string">&quot;on&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;session_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;The session_id distributed by the renter&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;session_id_sign&quot;</span><span class="token operator">:</span> <span class="token string">&quot;session_id_sign distributed by the renter&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,9)),n("p",null,[e[9]||(e[9]=s("For other API interfaces, please refer to ")),n("a",v,[e[8]||(e[8]=s("Bare Metal Node Operations")),o(a)])]),e[17]||(e[17]=n("h2",{id:"cloud-internet-cafe",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#cloud-internet-cafe","aria-hidden":"true"},"#"),s(" Cloud internet cafe")],-1)),n("p",null,[e[11]||(e[11]=s("In the cloud Internet cafe scene, after a GPU machine is connected to the chain in the form of a bare metal server, if you want to obtain an e-sports-level gaming experience, you also need to use a low-latency remote control software based on cloud games- ")),n("a",b,[e[10]||(e[10]=s("DeepLink")),o(a)]),e[12]||(e[12]=s("."))]),e[18]||(e[18]=t(`<p>Correspondingly, to use DeepLink remote control, it is necessary to obtain the device code and device verification code of the DeepLink software running on the GPU machine (hereinafter collectively referred to as DeepLink device information). To this end, we add an interface to query DeepLink device information through the dbc node.</p><p>To ensure security, it is recommended that the GPU machine in the cloud Internet cafe scenario has a different device verification code each time it is turned on. To ensure that the bare metal node of dbc can obtain the device information and changes of DeepLink, it is necessary to start a LAN TCP service on the bare metal node of dbc to establish a connection with DeepLink. The following configuration can be added to the bare metal node configuration file of dbc <code>dbc_baremetal_node/conf/core.conf</code>:</p><div class="language-conf line-numbers-mode" data-ext="conf"><pre class="language-conf"><code>deeplink_listen_ip=0.0.0.0
deeplink_listen_port=5003
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>At the same time, in the DeepLink configuration file <code>%appdata%\\DeepLink\\config.ini</code>, add the LAN TCP service that the bare metal node of dbc just started Service, for example:</p><div class="language-ini line-numbers-mode" data-ext="ini"><pre class="language-ini"><code><span class="token section"><span class="token punctuation">[</span><span class="token section-name selector">dbc</span><span class="token punctuation">]</span></span>
<span class="token key attr-name">bare_metal_ip</span><span class="token punctuation">=</span><span class="token value attr-value">192.168.1.159</span>
<span class="token key attr-name">bare_metal_port</span><span class="token punctuation">=</span><span class="token value attr-value">5003</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>After this setting, DeepLink will automatically connect to the bare metal node of dbc at startup and synchronize the device information of DeepLink.</p><div class="hint-container tip"><p class="hint-container-title">Note!</p><p>The above LAN connection requires dbc 0.4.1.7 and DeepLink 1.0.3.1 and above. This function replaces the middleware that was previously independently developed, deployed and stored for setting the DeepLink verification code, and integrates the functions of those middleware into the dbc and DeepLink software. At the same time, the interface for querying and setting machine information has also been changed, because a LAN connection needs to be established to query and set machine information. Please ensure that the configuration file and the IP address filled in when adding a bare metal machine are correct.</p></div><p>There are two tables in the bare metal node of dbc. One table stores node information. The key is the node_id of the node, and the value is uuid, ip, ipmi_hostname and other information. The other table stores the TCP connection established by DeepLink. The key is the ip address of the TCP connection, and the value is the deeplink_device_id and deeplink_device_password device information received by the TCP connection.</p><p>When the bare metal node of dbc receives a query request, it first checks the first table above, finds the ip address through node_id, and then uses the ip address to query the device information of DeepLink in the second table. Therefore, the ip address set when adding a bare metal server must be real and valid, and correspond to the DeepLink device one by one. It is recommended to correctly set the fields such as uuid and ip, otherwise the interface for querying DeepLink device information may report an error.</p><div class="hint-container tip"><p class="hint-container-title">Note!</p><p>For example, the &quot;deeplink service not connected&quot; error that frequently appears now is when the dbc bare metal node finds the IP address in the first table through node_id, but finds that this IP address does not exist in the second table. The reasons may be the following two points:</p><ol><li>The IP address set in the first table is inconsistent with the actual IP of the machine where DeepLink is installed.</li><li>The incorrect configuration mentioned above causes DeepLink to fail to establish a connection with dbc, so there is no such data in the second table.</li></ol></div><p>In addition, you need to modify <code>http_ip=127.0.0.1</code> in the configuration file <code>dbc_baremetal_node/conf/core.conf</code> of the bare metal node to <code>http_ip=0.0.0.0</code>, so that the bare metal node can directly accept HTTP requests.</p><p>When the GPU machine and the bare metal node of dbc are in the same network, you can directly use the HTTP service of the bare metal node to get/set device information, and the request at this time does not need <code>session_id</code> and <code>session_id_sign</code> parameters. When the renter queries the device information through the HTTP service of the client node, it must have <code>session_id</code> and <code>session_id_sign</code> parameters.</p><p>The specific usage process is as follows:</p><ol><li>After the GPU machine is powered on, query the DeepLink device information.</li></ol><ul><li><p>request method：POST</p></li><li><p>request URL：</p></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>http://{{dbc_baremetal_ip}}:{{dbc_baremetal_port}}/api/v1/deeplink
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>request Body:</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;peer_nodes_list&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token comment">// The node_id corresponding to the GPU machine</span>
    <span class="token string">&quot;fcf2cd8b99958606d260ca00c5ac00c88c242bcf8eb38e7cc3f29e9719a73f39&quot;</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;additional&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token comment">// Generated by the node_id and node_private_key of the GPU machine</span>
  <span class="token property">&quot;wallet&quot;</span><span class="token operator">:</span><span class="token string">&quot;fcf2cd8b99958606d260ca00c5ac00c88c242bcf8eb38e7cc3f29e9719a73f39&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;nonce&quot;</span><span class="token operator">:</span><span class="token string">&quot;3bxrsXVW2z2ELH7G9RvF7BMUQkEGkBfQhd8YD5r8somf3UdNWcEYAFa&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;sign&quot;</span><span class="token operator">:</span><span class="token string">&quot;e096764ac7462220bc9b8fa223b81cfb9a501eaea9ea355c0d561b6fe61cb729abed61e5d8488178856e198d9cde51c37e2aac8886cb5e7b674591b1eca8108f&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>return example：</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;errcode&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;message&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;device_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;123456789&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;device_password&quot;</span><span class="token operator">:</span> <span class="token string">&quot;aAbBcC&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Similarly, at this time, the renter can also use <code>session_id</code> and <code>session_id_sign</code> to call <code>http://{{dbc_client_ip}}:{{dbc_client_port}}/api/v1/deeplink</code> to query the device information of the bare metal node.</p><ol start="2"><li>The renter modifies the DeepLink device information.</li></ol><ul><li><p>request method：POST</p></li><li><p>request URL：</p></li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>http://{{dbc_client_ip}}:{{dbc_client_port}}/api/v1/deeplink/set
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><ul><li>request Body:</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;peer_nodes_list&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token comment">// The node_id corresponding to the GPU machine</span>
    <span class="token string">&quot;fcf2cd8b99958606d260ca00c5ac00c88c242bcf8eb38e7cc3f29e9719a73f39&quot;</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;additional&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// The device id can only be generated by DeepLink&#39;s server and cannot be set arbitrarily.</span>
    <span class="token comment">// &quot;device_id&quot;: &quot;123456789&quot;,</span>
    <span class="token property">&quot;device_password&quot;</span><span class="token operator">:</span> <span class="token string">&quot;aAbBcC&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;session_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;The session_id distributed by the renter&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;session_id_sign&quot;</span><span class="token operator">:</span> <span class="token string">&quot;session_id_sign distributed by the renter&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>return example：</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;errcode&quot;</span><span class="token operator">:</span> <span class="token number">0</span><span class="token punctuation">,</span>
  <span class="token property">&quot;message&quot;</span><span class="token operator">:</span> <span class="token string">&quot;ok&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,28))])}const f=i(d,[["render",h],["__file","dbc-bare-metal-node.html.vue"]]);export{f as default};
