import{_ as e,V as a,W as i,$ as d}from"./framework-1d64dffd.js";const n="/assets/1-ec7214b8.png",c="/assets/2-8df94983.png",s="/assets/3-e103f827.png",t="/assets/4-59a4405d.png",o="/assets/5-f58b612b.png",r="/assets/6-5d23a447.png",p="/assets/7-2144d2e0.png",l={},h=d('<h1 id="租用人举报机器故障" tabindex="-1"><a class="header-anchor" href="#租用人举报机器故障" aria-hidden="true">#</a> 租用人举报机器故障</h1><div class="hint-container warning"><p class="hint-container-title">注意</p><p>文档正在完善中</p></div><p>可以举报的四种机器故障按处理方式的不同分为两类:</p><ol><li><p>机器被租用后<strong>无法访问故障(<code>RentedInaccessible(MachineId)</code>)</strong>,</p></li><li><p>其他类型故障，包括</p><ul><li><p>机器被租用，但是有<strong>硬件故障(<code>RentedHardwareMalfunction(ReportHash, BoxPubkey)</code>)</strong>；</p></li><li><p>机器被租用，但是<strong>硬件造假(<code>RentedHardwareCounterfeit(ReportHash, BoxPubkey)</code>)</strong>；</p></li><li><p>机器是在线状态，但是<strong>无法租用(<code>OnlineRentFailed(ReportHash, BoxPubkey)</code>)</strong></p></li></ul></li></ol><p>下面对两种举报的过程做简要说明：</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>在本文档中，验证人即验证委员会，因此验证人/委员会这样的描述可能会被混用。</p><p>当且仅当在有人抢单之前，报告人可以取消报告。</p></div><h2 id="_1-机器被租用后无法访问" tabindex="-1"><a class="header-anchor" href="#_1-机器被租用后无法访问" aria-hidden="true">#</a> 1. 机器被租用后无法访问</h2><p>该类型被设计为验证人可以快速响应该报告，验证人可以用程序监控链上的这种报告并自动抢单，自动判断报告是否有效，并自动提交处理结果。因此，这种报告的故障处理速度最快。报告信息被明文提交到链上，用以适应这种处理方式。</p><h3 id="_1-1-角色-报告人-向链上举报" tabindex="-1"><a class="header-anchor" href="#_1-1-角色-报告人-向链上举报" aria-hidden="true">#</a> 1.1. [角色：报告人] 向链上举报</h3><p>执行<code>report_machine_fault</code>，报告人需选择<code>故障类型</code>为 <code>RentedInaccessible</code>，并提供机器 ID</p><p>支付费用： 10 DBC (此种类型举报的额外费用)</p><p>质押 1000 DBC</p><figure><img src="'+n+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_1-2-角色-验证人-进行抢单" tabindex="-1"><a class="header-anchor" href="#_1-2-角色-验证人-进行抢单" aria-hidden="true">#</a> 1.2. [角色：验证人] 进行抢单</h3><p>执行<code>committee_book_report</code></p><p>在第一个验证人抢单之后，5 分钟内将会开始提交验证结果，10 分钟时结束验证。</p><p>委员会可以监控 maintainCommittee.bookableReport 来查看是否有可抢单的报告</p><p>可以查询 maintainCommittee.reportInfo 来查询报告的具体信息(错误类型，举报时间等)</p><p>支付： 10 DBC</p><p>质押： 0 DBC (这种类型的举报不需要委员会质押)</p><h3 id="_1-3-角色-其他-验证人-进行抢单" tabindex="-1"><a class="header-anchor" href="#_1-3-角色-其他-验证人-进行抢单" aria-hidden="true">#</a> 1.3. [角色：(其他)验证人] 进行抢单</h3><ul><li><p>执行<code>committee_book_report</code></p></li><li><p>需要在第一个验证人抢单之后的 5 分钟(10 个块)内进行抢单</p></li><li><p>最多有 3 个验证人进行抢单</p></li><li><p>消耗 10 DBC 质押 1000DBC</p></li></ul><h3 id="_1-4-角色-已抢单-验证人-提交确认信息的-hash" tabindex="-1"><a class="header-anchor" href="#_1-4-角色-已抢单-验证人-提交确认信息的-hash" aria-hidden="true">#</a> 1.4. [角色：(已抢单)验证人] 提交<code>确认信息</code>的 Hash:</h3><p>执行 <code>committee_submit_verify_hash</code></p><figure><img src="'+c+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="hint-container tip"><p class="hint-container-title">Hash 生成方式</p><p>hash(&quot;report_id&quot; + &quot;committee_rand_str&quot; + &quot;is_support&quot;); 生成 hash 时请修改脚本： <code>https://github.com/DeepBrainChain/DeepBrainChain-MainChain/scripts/hash_machine_inaccessible.py</code></p></div><h3 id="_1-5-角色-已抢单-验证人-提交确认信息" tabindex="-1"><a class="header-anchor" href="#_1-5-角色-已抢单-验证人-提交确认信息" aria-hidden="true">#</a> 1.5. [角色： (已抢单)验证人]提交<code>确认信息</code></h3><ul><li>只有所有抢单的委员会都提交了 Hash 或者 距离首次抢单 5 分钟(10 个块)才允许验证人提交原始信息</li></ul><p>执行 <code>committee_submit_inaccessible_raw</code></p><figure><img src="'+s+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><div class="hint-container tip"><p class="hint-container-title">提示</p><p>等待所有已成功抢单的委员会提交原始信息或者到第一个验证人抢单之后 10 分钟时，将会统计委员会的验证结果，并进行处理</p></div><h3 id="_1-6-系统判定结果" tabindex="-1"><a class="header-anchor" href="#_1-6-系统判定结果" aria-hidden="true">#</a> 1.6. 系统判定结果</h3><p>TODO</p><h2 id="_2-其他故障" tabindex="-1"><a class="header-anchor" href="#_2-其他故障" aria-hidden="true">#</a> 2. 其他故障</h2><p>如前所述，其他故障包括：</p><p>机器被租用，但是有<strong>硬件故障(<code>RentedHardwareMalfunction(ReportHash, BoxPubkey)</code>)</strong>；</p><p>机器被租用，但是<strong>硬件造假(<code>RentedHardwareCounterfeit(ReportHash, BoxPubkey)</code>)</strong>；</p><p>机器是在线状态，但是<strong>无法租用(<code>OnlineRentFailed(ReportHash, BoxPubkey)</code>)</strong></p><h3 id="_2-1-角色-报告人-向链上举报" tabindex="-1"><a class="header-anchor" href="#_2-1-角色-报告人-向链上举报" aria-hidden="true">#</a> 2.1. [角色： 报告人] 向链上举报</h3><p>执行 <code>report_machine_fault</code>，报告人需选择<code>故障类型</code>为上述三种错误之一。这里以<code>无法租用</code>为例:</p><p>生成报告 Hash: 根据报告内容，修改脚本中的<code>machine_id</code>和<code>rand_str</code>,然后执行下面命令生成报告 Hash</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>❯ python hash_machine_fault.py
ReporterHash: 0x00e8af0f2ad79a07985e42fa5a045a55
CommitteeHash: 0xc45a1e9471d6e0e539febe382b009070
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>同时，还需要提供自己的 BoxPubkey，用于委员会收到加密信息后的解密:</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>如果是多签账户，或者不知道私钥，可以重新生成一个 SS58 账户，并使用该 SS58 的私钥生成 BoxPubkey。后续的操作使用该密钥对即可。</p></div><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>❯ node gen_boxpubkey.js --key 0xeb2a67b0d6d3e457076c3d4f9633e7400921fa49887324131b4a9520e5971c4c
0x20859b983f7f4f3aaf0a41915d0e61b27f90f9b0ffb9310eeee201a997c8b910
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>然后调用举报函数:</p><figure><img src="`+t+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_2-2-角色-验证人-进行抢单" tabindex="-1"><a class="header-anchor" href="#_2-2-角色-验证人-进行抢单" aria-hidden="true">#</a> 2.2. [角色：验证人] 进行抢单</h3><p>执行<code>committee_book_report</code></p><p>在第一个验证人抢单之后，5 分钟内将会开始提交验证结果，10 分钟时结束验证。</p><p>委员会可以监控 maintainCommittee.bookableReport 来查看是否有可抢单的报告</p><p>可以查询 maintainCommittee.reportInfo 来查询报告的具体信息(错误类型，举报时间等)</p><p>支付： 10 DBC</p><p>质押： 1000 DBC</p><h3 id="_2-3-角色-报告人-提交加密信息" tabindex="-1"><a class="header-anchor" href="#_2-3-角色-报告人-提交加密信息" aria-hidden="true">#</a> 2.3 [角色：报告人]提交加密信息</h3><p>当验证人进行抢单后，报告人需要在 30min (60 个块)中内，提交加密信息给抢单的委员会，超时未提供加密信息，将导致举报失败(举报人将因此被惩罚)。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 生成加密信息</span>
<span class="token function">node</span> seal_msg.js <span class="token parameter variable">--sender_privkey</span> 0x0cdc17e4cd84743c66bae7761ad354d423c93ac1e398630575d91371d6f713ce <span class="token parameter variable">--receiver_box_pubkey</span> 0x20da91ba45f5ed8fddd40d5439f817c9f00750694ed5c70d17e421caf15f437b <span class="token parameter variable">--msg</span> <span class="token string">&quot;abcdefg bcdefa&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>其中， <code>--sender_privkey</code>为举报人的私钥； <code>--receiver_box_pubkey</code>为委员会（接收人）的 box_pubkey，可以通过下面方式查询： <code>--msg</code>为要加密的错误信息，比如为<code>machine_id 有内存故障</code>，注意: <strong><code>--msg</code> 为 要举报的<code>machine_id</code> + 报告人随机字符串 + 错误信息</strong>，如<code>8eaf04151687736326c9fea17e25fc5287613693c912909cb226aa4794f26a48[abcdef]补充信息，可留空</code></p><h3 id="_2-4-角色-委员会-收到加密信息后解密" tabindex="-1"><a class="header-anchor" href="#_2-4-角色-委员会-收到加密信息后解密" aria-hidden="true">#</a> 2.4 [角色：委员会] 收到加密信息后解密</h3><p>当报告人提供了加密的信息后，委员会需要解密来查询报告人提交的信息</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">node</span> open_msg.js <span class="token parameter variable">--sender_box_pubkey</span> 0xe30cac79ec5fe7c9811ed9f1a18ca3806b22798e24b7d9f9424b1a27bde3e866 <span class="token parameter variable">--receiver_privkey</span> 0x171baa0f7baa4fa7e2dd94b8f9efc0b95034a4ad5f3aba5b6b923e38130c3f0d <span class="token parameter variable">--sealed_msg</span> 0x01405deeef2a8b0f4a09380d14431dd10fde1ad62b3c27b3fbea4701311d
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>其中， <code>--sender_box_pubkey</code> 为举报人的 box_pubkey，可通过<code>maintainCommittee.reportInfo.machine_fault_type</code>中的信息查询；</p><p><code>--receiver_privkey</code>为委员会自己的 box_pubkey 对应的私钥 <code>--sealed_msg</code>为委员会收到的加密的信息</p><p>解密完成后，委员会需要根据实际情况判断，机器是否有问题。并提交到链上</p><p>查询委员会 BoxPubkey:</p><figure><img src="`+o+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_2-5-角色-委员会-判断机器故障信息-并提交到链上" tabindex="-1"><a class="header-anchor" href="#_2-5-角色-委员会-判断机器故障信息-并提交到链上" aria-hidden="true">#</a> 2.5 [角色：委员会]判断机器故障信息，并提交到链上</h3><figure><img src="'+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>其中，<code>extra_err_info</code>为委员会判断的，可能不同于报告人认为的错误原因。该字段也可留空</p><h2 id="_3-结果执行与申述" tabindex="-1"><a class="header-anchor" href="#_3-结果执行与申述" aria-hidden="true">#</a> 3. 结果执行与申述</h2><h3 id="_3-1-举报结束后的奖励与惩罚" tabindex="-1"><a class="header-anchor" href="#_3-1-举报结束后的奖励与惩罚" aria-hidden="true">#</a> 3.1 举报结束后的奖励与惩罚</h3><p>当举报完成，根据委员会提交的结果将会进行惩罚与奖励。简单的说，</p><ul><li><p>对于验证人来说，</p><ul><li><p>未完成所有任务的委员会将被惩罚，如预订了报告/提交了验证 Hash，却没有最终提交确认信息</p></li><li><p>验证结果与多数委员会不同的情况，如 2 个委员会反对举报，1 个委员会支持举报，则支持的委员会会被惩罚，其余 2 个委员会会被奖励</p></li><li><p>当成功完成验证机器故障任务，并与其余多数委员会观点相同（都认为机器有故障/无故障）时，会被奖励</p></li></ul></li><li><p>对于举报人来说</p><ul><li><p>当举报人举报需要提交加密信息的故障类型时，如没有在委员会抢单半小时内提交加密信息，举报将会失败，会被惩罚</p></li><li><p>当举报人的举报被大多数委员会所反对时，会被惩罚</p></li><li><p>当举报被大多数委员会支持时，会被奖励</p></li></ul></li><li><p>对 machine_stash 来说，</p><p>当举报成功时，会被惩罚</p></li></ul><h3 id="_3-2-奖励与惩罚发生后的申述" tabindex="-1"><a class="header-anchor" href="#_3-2-奖励与惩罚发生后的申述" aria-hidden="true">#</a> 3.2 奖励与惩罚发生后的申述</h3><p>当举报发生后，链上将记录该惩罚，并在惩罚发生后的<strong>两天后(2880*2 个块)执行</strong>，允许被惩罚的委员会/报告人进行申述。申述将会由技术委员会来处理。技术委员会判定申述有效后，将会取消该惩罚。</p><p>其中，当机器因举报成功被下架后，需要检查、处理故障后，尽快上架以减少惩罚。当机器被错误惩罚后，也许要上架后，进行申述（同样有 2 天时间），请求技术委员会判定。</p><p>未成功完成任务的委员会不允许申述</p><p>申述需要质押一定的币，当申述失败后，质押的币将会被扣除。</p><h2 id="_4-技术委员会取消惩罚" tabindex="-1"><a class="header-anchor" href="#_4-技术委员会取消惩罚" aria-hidden="true">#</a> 4. 技术委员会取消惩罚</h2><p>当被惩罚人，质押一定的 DBC，提出技术委员会申述后，技术委员会可以在惩罚执行前取消惩罚。</p><p>只要到对应模块中调用取消惩罚(<code>cancel_slash</code>)即可，其中阈值设置为 1（1/5），<code>slash_id</code>为申述的需要取消的惩罚。如，</p><h3 id="_4-1-角色-技术委员会-根据申述取消惩罚" tabindex="-1"><a class="header-anchor" href="#_4-1-角色-技术委员会-根据申述取消惩罚" aria-hidden="true">#</a> 4.1 [角色：技术委员会]根据申述取消惩罚</h3><ul><li><p>取消报告人的惩罚，需要调用<code>maintainCommittee--cancelReporterSlash</code></p></li><li><p>取消 stash(因机器下线后再上线导致)的惩罚，需要调用<code>onlineProfile--cancelSlash</code></p></li><li><p>取消上线委员会的惩罚（因没有分配的工作，或者与处理该订单的其他大多数委员会的观点不一致)，需要调用<code>onlineCommittee-cancelSlash</code></p></li></ul><figure><img src="'+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure>',84),b=[h];function u(_,f){return a(),i("div",null,b)}const g=e(l,[["render",u],["__file","report-machine-fault.html.vue"]]);export{g as default};
