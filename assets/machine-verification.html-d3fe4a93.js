import{_ as t,V as s,W as o,X as e,Y as a,Z as d,$ as i,F as c}from"./framework-1d64dffd.js";const r="/assets/image-20210601164137286-28f00c07.png",h="/assets/image-20210601164631426-d6362ae6.png",l="/assets/133870420-b790637c-cab6-44f9-ba00-493eadc951cd-1f0bf23a.png",p="/assets/133870889-61976abb-ae6b-4cd6-97e3-9e9205745346-fea29f07.png",g="/assets/133870573-04dbcb84-9112-4837-b8e4-20db8538c079-b5aa0eb1.png",m="/assets/133871452-06dde25a-9691-44dc-b35b-124dbece44fd-f5317cc4.png",f="/assets/test_create-1646e9b6.png",_="/assets/task_info-88087016.png",u="/assets/nvidia-232e54d9.png",b="/assets/delete-68c9063e.png",v="/assets/image-20210601165736511-4600402e.png",x="/assets/image-20210601165851303-64e26f9a.png",k="/assets/image-20211020112744070-55c8dbcd.png",y="/assets/image-20211020112948942-2ffee279.png",z="/assets/image-20211020113330231-00028611.png",C={},B=i('<h1 id="委员会处理机器上链请求" tabindex="-1"><a class="header-anchor" href="#委员会处理机器上链请求" aria-hidden="true">#</a> 委员会处理机器上链请求</h1><h2 id="_1-查看系统分配给自己的订单" tabindex="-1"><a class="header-anchor" href="#_1-查看系统分配给自己的订单" aria-hidden="true">#</a> 1. 查看系统分配给自己的订单</h2><p>导航到 <code>开发者</code>--&gt;<code>链状态</code>--&gt;<code>存储</code>，在其中选择<code>onlineCommittee</code>模块的<code>committeeMachine</code>存储，点击右侧的<code>+</code>号，可以看到委员会的订单情况。如图所示，该委员会有一个系统分配的订单</p><figure><img src="'+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_2-查看系统分配给该委员会进行验证的时间区间" tabindex="-1"><a class="header-anchor" href="#_2-查看系统分配给该委员会进行验证的时间区间" aria-hidden="true">#</a> 2. 查看系统分配给该委员会进行验证的时间区间</h2><p>导航到 <code>开发者</code>--<code>链存储</code>--<code>存储</code>，选择<code>onlineCommittee</code>的<code>committeeOps</code>方法，并输入自己的委员会帐号，与上一步委派的机器 ID，可以查询到类似下面的信息：</p><figure><img src="'+h+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>其中，booked_time 表示派单时间，注意，派单之后的 36~48 小时(也就是区块高度 booked_time + 4320 ~ booked_time + 5760)之间，委员会提交原始信息。</p><p><code>verify_time</code> 表示系统分派的，委员会验证机器信息的开始时间。如图，该委员会被分派了 9 次机会来验证机器，每次持续时间为 4 个小时，也就是 480 个块高。此时，委员会可以挑选自己方便的时间，通过前端查询该机器的登录信息，登录到系统中验证机器。</p><h2 id="_3-查询机器信息" tabindex="-1"><a class="header-anchor" href="#_3-查询机器信息" aria-hidden="true">#</a> 3. 查询机器信息</h2><h3 id="_3-1-下载-postman" tabindex="-1"><a class="header-anchor" href="#_3-1-下载-postman" aria-hidden="true">#</a> 3.1 下载 Postman</h3><p>下载安装 postman，具体下载请去官网根据操作系统安装。</p>',12),D={href:"http://114.116.21.175:22244/dbc-develop-0.3.7.5.postman_collection.json",target:"_blank",rel:"noopener noreferrer"},S=i('<p>导入 json 文件：fiel----import----选择 json 文件导入 import</p><figure><img src="'+l+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>将客户端 ip 地址以及端口更换为 <code>121.57.95.175:5679</code></p><h3 id="_3-2-查看宿主机详细信息" tabindex="-1"><a class="header-anchor" href="#_3-2-查看宿主机详细信息" aria-hidden="true">#</a> 3.2 查看宿主机详细信息：</h3><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>签名工具下载地址：https://github.com/DeepBrainChain/DBC-AIComputingNet/releases/download/0.3.7.3/sign_tool

<span class="token comment"># 安装依赖 libvirt：</span>
<span class="token comment">## Ubuntu</span>
<span class="token function">sudo</span> <span class="token function">apt-get</span> <span class="token function">install</span> libvirt
<span class="token comment">## Arch</span>
yay <span class="token parameter variable">-S</span> libvirt

<span class="token comment"># 添加执行权限：</span>
<span class="token function">chmod</span> +x sign_tool
 <span class="token comment"># 然后签名执行：</span>
./sign_tool 钱包地址 钱包私钥
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+p+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>在下图中替换：sign、nonce、wallet （注意：同一个机器 sign、nonce 只能使用一次），可以查询到机器信息</p><figure><img src="'+g+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><figure><img src="'+m+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>查看机器 GPU 信息</p><h3 id="_3-3-创建虚拟机机器" tabindex="-1"><a class="header-anchor" href="#_3-3-创建虚拟机机器" aria-hidden="true">#</a> 3.3 创建虚拟机机器</h3><figure><img src="'+f+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>创建过程比较慢，大约在五分钟到十五分钟之间，在 postman 的查看 task 详细信息查看虚拟机登录信息及虚拟机状态，如返回的结果中&quot;status&quot;: &quot;creating&quot;表示虚拟机正在创建，此时等待即可</p><figure><img src="'+_+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_3-4-进入创建的虚拟机执行nvidia-smi-l查看显卡类型" tabindex="-1"><a class="header-anchor" href="#_3-4-进入创建的虚拟机执行nvidia-smi-l查看显卡类型" aria-hidden="true">#</a> 3.4 进入创建的虚拟机执行<code>nvidia-smi -L</code>查看显卡类型</h3><figure><img src="'+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>查询完成后将虚拟机删除，出现 OK 说明删除成功</p><figure><img src="'+b+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_4-委员会计算获得机器信息的-hash" tabindex="-1"><a class="header-anchor" href="#_4-委员会计算获得机器信息的-hash" aria-hidden="true">#</a> 4. 委员会计算获得机器信息的 hash</h2><p>我们已经提供了脚本来计算需要填写的信息的 Hash：</p><p><code>https://github.com/DeepBrainChain/DeepBrainChain-MainChain/blob/master/scripts/hash_machine_info.py</code></p><p>当获取到要求的信息后，修改该脚本，并执行，得到 hash 值。<strong>请保存好所填写的信息，直到该机器上线成功，或者上线失败</strong></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>python3 hash_machine_info.py
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="_5-委员会提交机器信息的-hash" tabindex="-1"><a class="header-anchor" href="#_5-委员会提交机器信息的-hash" aria-hidden="true">#</a> 5. 委员会提交机器信息的 Hash</h2><p>如图，在 36 小时之前提交机器信息的 Hash(提交的时候要注意 0x 一定不能去掉)</p><p>注意：图片中，<strong>leaseCommittee 替换成 onlineCommittee!!!</strong> 其他不变。</p><figure><img src="`+v+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_6-委员会提交机器的原始信息" tabindex="-1"><a class="header-anchor" href="#_6-委员会提交机器的原始信息" aria-hidden="true">#</a> 6. 委员会提交机器的原始信息</h2><p><strong>请确保提交机器原始信息时，在派单之后的 36~48 小时之间！</strong></p><figure><img src="'+x+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_7-委员会奖励的查询与领取" tabindex="-1"><a class="header-anchor" href="#_7-委员会奖励的查询与领取" aria-hidden="true">#</a> 7. 委员会奖励的查询与领取</h2><h3 id="_7-1-查询奖励" tabindex="-1"><a class="header-anchor" href="#_7-1-查询奖励" aria-hidden="true">#</a> 7.1 查询奖励</h3><p>导航到 开发者--链状态--存储，查询委员会帐号对应的奖励（committee 模块的 committeeStake 方法）。如图，其中<code>can_claim_reward</code>为可领取的奖励；<code>claimed_reward</code>为已经领取的奖励。</p><figure><img src="'+k+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_7-2-领取奖励" tabindex="-1"><a class="header-anchor" href="#_7-2-领取奖励" aria-hidden="true">#</a> 7.2 领取奖励</h3><p>导航到 开发者--交易，选择委员会帐号，选择 <code>committee</code> 模块的 <code>claimReward</code> 方法，提交交易即可。</p><figure><img src="'+y+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_8-其他操作" tabindex="-1"><a class="header-anchor" href="#_8-其他操作" aria-hidden="true">#</a> 8. 其他操作</h2><h3 id="_8-1-委员会添加质押" tabindex="-1"><a class="header-anchor" href="#_8-1-委员会添加质押" aria-hidden="true">#</a> 8.1 委员会添加质押</h3><p>可以调用 <code>committee</code> --&gt; <code>committeeAddStake</code> 方法。当(质押数量-已使用的质押) &gt; 质押数量*40%时，委员会状态为&quot;可派单的&quot;</p><h3 id="_8-2-委员会减少质押" tabindex="-1"><a class="header-anchor" href="#_8-2-委员会减少质押" aria-hidden="true">#</a> 8.2 委员会减少质押</h3><p>调用 <code>committee</code> --&gt; <code>committeeReduceStake</code>方法。注意，最小质押当前为 2 万 DBC，减少后如果小于最小质押，将会无法减少质押。</p><h3 id="_8-3-查询惩罚-todo" tabindex="-1"><a class="header-anchor" href="#_8-3-查询惩罚-todo" aria-hidden="true">#</a> 8.3 查询惩罚(TODO)</h3><p>委员会可以通过 开发者--链状态--选择 committee 模块的 pendingSlash 方法来查询奖励。其中，SlashId 为自增的，可以不包含该值，查询所有还没执行的惩罚。</p><p>如下图，可以查看惩罚金额(slash_amount)，原因(slash_reason)，惩罚执行时间(slash_exec_time)，惩罚产生时间(slash_time)等信息。</p><figure><img src="'+z+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_8-4-惩罚申诉-todo" tabindex="-1"><a class="header-anchor" href="#_8-4-惩罚申诉-todo" aria-hidden="true">#</a> 8.4 惩罚申诉(TODO)</h3>',47);function q(O,V){const n=c("ExternalLinkIcon");return s(),o("div",null,[B,e("p",null,[a("下载 json 文件："),e("a",D,[a("http://114.116.21.175:22244/dbc-develop-0.3.7.5.postman_collection.json"),d(n)])]),S])}const w=t(C,[["render",q],["__file","machine-verification.html.vue"]]);export{w as default};
