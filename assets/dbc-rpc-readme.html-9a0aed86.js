import{_ as o,V as i,W as c,X as n,Y as e,Z as s,$ as t,F as r}from"./framework-1d64dffd.js";const p="/DBC-Wiki/assets/image-20211020111401731-52d0d6e3.png",l="/DBC-Wiki/assets/image-20210813113734192-75462bbb.png",d={},u=t('<h1 id="dbc-blockchain-mainnet-rpc-description" tabindex="-1"><a class="header-anchor" href="#dbc-blockchain-mainnet-rpc-description" aria-hidden="true">#</a> DBC-Blockchain mainnet RPC description</h1><h2 id="_1-rpc-description" tabindex="-1"><a class="header-anchor" href="#_1-rpc-description" aria-hidden="true">#</a> 1. RPC description</h2><h3 id="_1-1-applicable-version" tabindex="-1"><a class="header-anchor" href="#_1-1-applicable-version" aria-hidden="true">#</a> 1.1 Applicable version</h3>',3),h={href:"https://github.com/DeepBrainChain/DeepBrainChain-MainChain",target:"_blank",rel:"noopener noreferrer"},m=n("code",null,"master",-1),b=n("code",null,"wss://info.dbcwallet.io",-1),k=t(`<h3 id="_1-2-build-your-own-rpc-node" tabindex="-1"><a class="header-anchor" href="#_1-2-build-your-own-rpc-node" aria-hidden="true">#</a> 1.2 Build your own RPC node</h3><p>In addition to using the <code>websocket interface</code> provided by DBC, you can also build your own sync node and use the <code>websocket</code> or <code>HTTP interface</code> provided by your own node to obtain data.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># Rust compilation environment</span>
<span class="token function">curl</span> https://getsubstrate.io <span class="token parameter variable">-sSf</span> <span class="token operator">|</span> <span class="token function">bash</span> <span class="token parameter variable">-s</span> -- <span class="token parameter variable">--fast</span>
<span class="token builtin class-name">source</span> ~/.cargo/env

<span class="token comment"># compile dbc-chain</span>
<span class="token function">git</span> clone https://github.com/DeepBrainChain/DeepBrainChain-MainChain.git <span class="token operator">&amp;&amp;</span> <span class="token builtin class-name">cd</span> DeepBrainChain-MainChain
<span class="token function">git</span> checkout v2.3
<span class="token function">cargo</span> build <span class="token parameter variable">--release</span>

<span class="token comment"># run sync node：</span>
./target/release/dbc-chain --base-path ./db_data <span class="token parameter variable">--pruning</span> archive --rpc-cors all --no-mdns

<span class="token comment"># Port：</span>
--rpc-port <span class="token number">9933</span>   <span class="token comment"># Specify the port on which your node listens for RPC. 9933 is the default value, so this parameter can also be ignored</span>
--ws-port <span class="token number">9945</span>    <span class="token comment"># Specify the port your node uses to listen for WebSocket. The default port is 9944</span>
<span class="token parameter variable">--port</span> <span class="token number">30333</span>      <span class="token comment"># Specify the node port you use to listen for p2p traffic. 30333 is the default port, if you don’t need to change it, you can ignore this flag</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>After running the sync node in the above method, you can call the websocket interface through <code>ws://127.0.0.1:9945</code>, and call the http interface through <code>http://127.0.0.1:9933</code>.</p><p>If you want to access remotely, you need to configure the domain name for websocket or http to support <code>wss</code> or <code>https</code></p><p>Example of using the HTTP interface to obtain data, you can view <code>dbc_chain_rpc.postman_collection.json</code> in this folder, and import Postman for viewing.</p><h3 id="_1-3-rpc-request-format" tabindex="-1"><a class="header-anchor" href="#_1-3-rpc-request-format" aria-hidden="true">#</a> 1.3 RPC request format</h3><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;jsonrpc&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2.0&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token property">&quot;method&quot;</span><span class="token operator">:</span> method_name<span class="token punctuation">,</span>
  <span class="token property">&quot;params&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>params_1<span class="token punctuation">,</span> params_2<span class="token punctuation">,</span> ...<span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Among them, <code>method_name</code> is the name of the RPC method, and params_1, params_2... are replaced with the required parameters.</p><p>For example, use Postman to connect to websocket to query <code>block information</code>:</p>`,10),v={href:"https://blog.postman.com/postman-supports-websocket-apis/",target:"_blank",rel:"noopener noreferrer"},f=n("figure",null,[n("img",{src:p,alt:"image-20211020111401731",tabindex:"0",loading:"lazy"}),n("figcaption",null,"image-20211020111401731")],-1),g=n("h3",{id:"_1-4-how-to-access-historical-data-on-the-chain",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-4-how-to-access-historical-data-on-the-chain","aria-hidden":"true"},"#"),e(" 1.4 How to access historical data on the chain")],-1),_=n("p",null,"In 1.3, the acquired data is the current state of the chain. If you want to get the status at a certain time in the past, you need to pass in the Hash of the corresponding block at a certain time.",-1),w=n("p",null,'If you want to view the data two days ago, add the block Hash two days ago to the last parameter of the "params" field of the post request.',-1),q=n("h3",{id:"_1-5-rpc-documents-not-included",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-5-rpc-documents-not-included","aria-hidden":"true"},"#"),e(" 1.5 RPC documents not included")],-1),y=n("strong",null,[n("code",null,"custom RPC description")],-1),C=n("strong",null,[n("code",null,"Polkadot native RPC document description")],-1),x={href:"https://polkadot.js.org/",target:"_blank",rel:"noopener noreferrer"},P=n("h3",{id:"_1-6-view-all-supported-rpc-methods",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#_1-6-view-all-supported-rpc-methods","aria-hidden":"true"},"#"),e(" 1.6 View all supported RPC methods")],-1),R={href:"https://www.dbcwallet.io/",target:"_blank",rel:"noopener noreferrer"},B=n("code",null,"RPC calls",-1),j=n("code",null,"methods",-1),E=n("code",null,"rpc",-1),T=n("code",null,"Submit RPC Call",-1),D=t('<figure><img src="'+l+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="_2-about-block-height-reward-distribution-time-and-description-of-era" tabindex="-1"><a class="header-anchor" href="#_2-about-block-height-reward-distribution-time-and-description-of-era" aria-hidden="true">#</a> 2. <strong>About <code>Block height</code>, reward distribution time, and description of <code>Era</code></strong></h2><p>The block height is the time on the chain.</p><h3 id="_2-1-get-the-current-block-height" tabindex="-1"><a class="header-anchor" href="#_2-1-get-the-current-block-height" aria-hidden="true">#</a> 2.1 Get the current block height</h3><ul><li><p>Methods： <code>chain_getBlock</code></p></li><li><p>How to call：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;jsonrpc&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2.0&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  <span class="token property">&quot;method&quot;</span><span class="token operator">:</span> <span class="token string">&quot;chain_getBlock&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;params&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>Result：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;jsonrpc&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2.0&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;result&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;block&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
      ...
      <span class="token property">&quot;header&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
        ...
        <span class="token property">&quot;number&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0x2d8&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;parentHash&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0xc0e1b239fafc0edf3e08a908b5caecb27c2b351ed0daef3fc60c5600b28d6d7d&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;stateRoot&quot;</span><span class="token operator">:</span> <span class="token string">&quot;0x55ce4794b2cdd21275656a80febf5133d882d909a2de6d40d7b8887bd65628bc&quot;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token property">&quot;justification&quot;</span><span class="token operator">:</span> <span class="token null keyword">null</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">1</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>&quot;number&quot;: &quot;0x2d8&quot; is block height. Convert to decimal ：728</p></li></ul><h3 id="_2-2-era-and-reward-distribution-time" tabindex="-1"><a class="header-anchor" href="#_2-2-era-and-reward-distribution-time" aria-hidden="true">#</a> 2.2 Era and reward distribution time</h3><ul><li><p>1 Era is 2880 blocks in height, which is about 1 day on the DBC blockchain. The time for issuing rewards is the time interval of the block chain height <code>[2880*n, 2880*n+60]</code>.</p></li><li><p>Machines that go online on the nth Era will be issued at the end of n+1 Era. That is, if the machine that goes online on Era2 is [5761, 8640], the rewards will be issued in the interval of 60 blocks before the start of Era4, that is, the rewards of Era3 will be distributed when <code>2880*4=11520</code>. You can check the rewards of Era3 later, for example, through the erasMachineReleasedReward method, check the rewards obtained by era3 machines.</p></li><li><p>On the current mainnet, [529920, 532800] is Era1, and [532801, 535680] is Era2...</p></li></ul>`,7);function I(H,S){const a=r("ExternalLinkIcon");return i(),c("div",null,[u,n("p",null,[e("This document applies to dbc mainnet, mainnet branch "),n("a",h,[m,s(a)]),e("，websocket： "),b]),k,n("blockquote",null,[n("p",null,[e("Postman creates websocket API: "),n("a",v,[e("https://blog.postman.com/postman-supports-websocket-apis/"),s(a)])]),f]),g,_,w,q,n("p",null,[e("This document only contains the DBC mainnet "),y,e(", if you want to view "),C,e(", you can refer to: "),n("a",x,[e("https://polkadot.js.org/"),s(a)]),e(" docs/substrate/rpc/;")]),P,n("p",null,[e("Go to the dbc web wallet: "),n("a",R,[e("https://www.dbcwallet.io/"),s(a)]),e(", click on the left to switch networks, and in the custom terminal, enter the websocket address. Then navigate to "),B,e(" as shown below to view all RPCs supported by the blockchain. As shown in the figure, select the "),j,e(" method of the "),E,e(" module, click on the right side of "),T,e(", and all RPC method names will be listed.")]),D])}const M=o(d,[["render",I],["__file","dbc-rpc-readme.html.vue"]]);export{M as default};
