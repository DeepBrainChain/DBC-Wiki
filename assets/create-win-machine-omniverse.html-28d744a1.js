import{_ as i,V as o,W as c,X as e,Y as n,Z as t,$ as s,F as l}from"./framework-1d64dffd.js";const r="/DBC-Wiki/assets/find_machine-a06ade5a.png",p="/DBC-Wiki/assets/create_win-2d9a3a58.png",d="/DBC-Wiki/assets/connect-45a80476.png",u="/DBC-Wiki/assets/install-da853f67.png",h="/DBC-Wiki/assets/face_info-9d12704d.png",m={},v=e("h1",{id:"create-windows-virtual-machine-application-omniverse",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#create-windows-virtual-machine-application-omniverse","aria-hidden":"true"},"#"),n(" Create windows virtual machine application omniverse")],-1),f=e("hr",null,null,-1),_=e("h2",{id:"step-1-determine-which-machine-to-rent",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#step-1-determine-which-machine-to-rent","aria-hidden":"true"},"#"),n(" Step 1: Determine which machine to rent")],-1),k={href:"https://www.dbcwallet.io/?rpc=wss://info.dbcwallet.io",target:"_blank",rel:"noopener noreferrer"},b=e("li",null,[e("p",null,"Create a wallet: Account-->Add Account (The mnemonic must be saved, if the mnemonic is lost, the account cannot be retrieved, and the coins are lost)")],-1),g={href:"https://galaxyrace.deepbrainchain.org/table",target:"_blank",rel:"noopener noreferrer"},q=e("figure",null,[e("img",{src:r,alt:"find_machine",tabindex:"0",loading:"lazy"}),e("figcaption",null,"find_machine")],-1),w=e("h2",{id:"step-2-rent-an-on-chain-machine",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#step-2-rent-an-on-chain-machine","aria-hidden":"true"},"#"),n(" Step 2: Rent an on-chain machine")],-1),y=s("<li><p>Navigate to <code>developer</code>---<code>transaction</code>---<code>rentMachine</code> ----<code>rentMachine(machine_id, duration)</code></p></li><li><p>machine_id Enter the id of the machine to be rented, and delete the <code>0x</code> in the input box first</p></li><li><p>duration Enter the number of days to rent</p></li><li><p>After the input is complete, click Submit Transaction and confirm whether the machine is available within 30 minutes. (If the lease is not confirmed within 30 minutes, the <code>dbc</code> paid will be refunded, but the transaction fee of 10 <code>dbc</code> cannot be refunded)</p></li>",4),x=s(`<p>Create a windows virtual machine:</p><blockquote><p><code>request method</code>：POST</p><p><code>request URL</code>：http://&lt;<strong>dbc_client_ip</strong>&gt;:&lt;<strong>dbc_client_port</strong>&gt;/api/v1/tasks/start</p><p><code>request body</code>：</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token punctuation">{</span>
  <span class="token property">&quot;peer_nodes_list&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
      <span class="token comment">// The node_id of the requesting machine</span>
      <span class="token string">&quot;58fb618aa482c41114eb3cfdaefd3ba183172da9e25251449d045043fbd37f45&quot;</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;additional&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
       <span class="token property">&quot;ssh_port&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
      <span class="token comment">//Default port for remote login (set a different value for each virtual machine)</span>
       <span class="token property">&quot;rdp_port&quot;</span><span class="token operator">:</span><span class="token string">&quot;3389&quot;</span><span class="token punctuation">,</span>
      <span class="token comment">//Virtual machine image name (make sure the image name written in the virtual machine or image management center)</span>
       <span class="token property">&quot;image_name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;windows_1909.qcow2&quot;</span><span class="token punctuation">,</span>
      <span class="token comment">// Fill in the name of the data disk (you can leave it blank, if you leave it blank, dbc exists in the form of data_1_&lt;task_id&gt;.qcow2 by default,</span>
         If you fill in<span class="token punctuation">,</span> it will check whether the file exists<span class="token punctuation">,</span> and if it exists<span class="token punctuation">,</span> the data disk will exist in the form of .qcow2 of the filled file)
       <span class="token property">&quot;data_file_name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
       <span class="token comment">// Number of gpus (greater than or equal to 0)</span>
       <span class="token property">&quot;gpu_count&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>
      <span class="token comment">// Number of CPUs (greater than 0)</span>
       <span class="token property">&quot;cpu_cores&quot;</span><span class="token operator">:</span> <span class="token string">&quot;8&quot;</span><span class="token punctuation">,</span>
      <span class="token comment">// Memory size (greater than 0, unit: G)</span>
       <span class="token property">&quot;mem_size&quot;</span><span class="token operator">:</span> <span class="token string">&quot;32&quot;</span><span class="token punctuation">,</span>
      <span class="token comment">// Disk size (greater than 0, unit: G)</span>
       <span class="token property">&quot;disk_size&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>
      <span class="token comment">// The port number when connecting to this virtual machine using vnc (set a different value for each virtual machine)</span>
       <span class="token property">&quot;vnc_port&quot;</span><span class="token operator">:</span> <span class="token string">&quot;5907&quot;</span><span class="token punctuation">,</span>
      <span class="token comment">// windows system (required)</span>
       <span class="token property">&quot;operation_system&quot;</span><span class="token operator">:</span> <span class="token string">&quot;win10&quot;</span><span class="token punctuation">,</span>
       <span class="token property">&quot;bios_mode&quot;</span><span class="token operator">:</span> <span class="token string">&quot;uefi&quot;</span><span class="token punctuation">,</span>
       <span class="token property">&quot;vm_xml&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span><span class="token punctuation">,</span>
       <span class="token property">&quot;vm_xml_url&quot;</span><span class="token operator">:</span> <span class="token string">&quot;&quot;</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>

  <span class="token property">&quot;session_id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;The session_id distributed by the renter&quot;</span><span class="token punctuation">,</span>
  <span class="token property">&quot;session_id_sign&quot;</span><span class="token operator">:</span> <span class="token string">&quot;session_id_sign distributed by the renter&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例： <img src="`+p+'" alt="create_win" loading="lazy"></p></blockquote><ul><li>The length of the creation process will vary depending on the configuration, ranging from five to fifteen minutes.</li><li>You can query the <code>login method</code> of the virtual machine and the <code>current status</code> of the virtual machine by requesting <code>virtual machine details</code> (when the status value is &quot;creating&quot;, it means that the virtual machine is in the process of being created)</li></ul>',3),C={href:"https://github.com/DeepBrainChain/DBC-DOC/blob/master/creat_macine/create_macine.md",target:"_blank",rel:"noopener noreferrer"},D=s('<h2 id="step-3-connect-to-the-virtual-machine-remotely" tabindex="-1"><a class="header-anchor" href="#step-3-connect-to-the-virtual-machine-remotely" aria-hidden="true">#</a> Step 3: Connect to the virtual machine remotely</h2><ul><li><p>After viewing the login method of the virtual machine, open a remote connection locally</p><figure><img src="'+d+'" alt="connect" tabindex="0" loading="lazy"><figcaption>connect</figcaption></figure></li></ul><h2 id="step-4-confirm-availability-and-lease" tabindex="-1"><a class="header-anchor" href="#step-4-confirm-availability-and-lease" aria-hidden="true">#</a> Step 4: Confirm availability and lease</h2><div class="hint-container warning"><p class="hint-container-title">Note</p><p>Before confirming, you must confirm that the virtual machine can be started normally. After confirming that the lease is successful, it means that the machine is leased successfully, and the DBC rent cannot be refunded.</p></div><ul><li><p>Navigate to <code>Developer</code>----<code>Transaction</code>----<code>rentMachine</code>----<code>confirmRent(machine_id)</code></p></li><li><p>Enter the machine id and submit the transaction</p></li></ul><h2 id="step-5-download-omniverse" tabindex="-1"><a class="header-anchor" href="#step-5-download-omniverse" aria-hidden="true">#</a> Step 5: Download omniverse</h2>',6),N=e("code",null,"NVIDIA",-1),A=e("code",null,"NVIDIA omniverse",-1),B={href:"https://www.nvidia.cn/omniverse/#",target:"_blank",rel:"noopener noreferrer"},M=s('<li><p>After the installation is complete according to the documentation on the official website: Navigate to <code>EXCHANGE</code>, find <code>Audio2Face</code> in the <code>Apps</code> section, then click <code>&quot;Install&quot;</code> and <code>&quot;Launch&quot; )</code>.</p><figure><img src="'+u+'" alt="install" tabindex="0" loading="lazy"><figcaption>install</figcaption></figure></li>',1),z=e("p",null,"After startup, you can see the default avatar and accompanying voice and template parameters (it will take a few minutes to load the template engine)",-1),E={href:"https://docs.omniverse.nvidia.com/app_audio2face/app_audio2face/overview.html",target:"_blank",rel:"noopener noreferrer"},I=e("figure",null,[e("img",{src:h,alt:"face_info",tabindex:"0",loading:"lazy"}),e("figcaption",null,"face_info")],-1),S=s('<h2 id="step-6-machine-lease-renewal" tabindex="-1"><a class="header-anchor" href="#step-6-machine-lease-renewal" aria-hidden="true">#</a> Step 6: Machine lease renewal</h2><div class="hint-container warning"><p class="hint-container-title">Note</p><p>When the machine expires, the virtual machine will be automatically stopped to ensure that the lease is successfully renewed before the lease expires.</p></div><ul><li>Navigate to <code>developer</code>----<code>transaction</code>----<code>rentMachine</code>----<code>reletMachine(machine_id, add_duration)</code></li><li>Enter the machine id and the number of days to renew the lease and submit the transaction</li></ul>',3);function T(W,V){const a=l("ExternalLinkIcon");return o(),c("div",null,[v,f,_,e("ul",null,[e("li",null,[e("p",null,[n("Open "),e("a",k,[n("Mainnet Wallet"),t(a)])])]),b,e("li",null,[e("p",null,[n("Go to "),e("a",g,[n("Galaxy Race Machine List"),t(a)]),n(" to find the corresponding type of idle machine")]),q])]),w,e("ul",null,[y,e("li",null,[x,e("p",null,[n("For related operations, please "),e("a",C,[n("Reference"),t(a)])])])]),D,e("ul",null,[e("li",null,[e("p",null,[n("Open "),N,n(" official website to download "),A,n(": "),e("a",B,[n("https://www.nvidia.cn/omniverse/#"),t(a)])])]),M,e("li",null,[z,e("p",null,[n("For more operation details, please "),e("a",E,[n("Reference"),t(a)])]),I])]),S])}const F=i(m,[["render",T],["__file","create-win-machine-omniverse.html.vue"]]);export{F as default};
